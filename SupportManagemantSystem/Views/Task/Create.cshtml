@using pep
@model SupportManagemantSystem.Models.Task

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_PupularLayout.cshtml";
}

<h4>جدید</h4>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.decription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.decription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.decription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.date, new { htmlAttributes = new { @class = "form-control" , Value= Common.GetDate().ToPersianDateShortString() } })
                @Html.ValidationMessageFor(model => model.date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.spentTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.spentTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.spentTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ticketID, "تیکت", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ticketID", null, "انتخاب تیکت", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ticketID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.projectID, "پروژه", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("projectID", null, "انتخاب پروژه", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.projectID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.companyID, "شرکت", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("companyID", null, "انتخاب شرکت", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.companyID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="ثبت" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("بازگشت", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $('#ticketID').change(() => {
            if ($('#ticketID').val() != null) {
                $.post('/task/TicketInformation', { id: $('#ticketID').val() }, (s) => {
                    var w = $.parseJSON(JSON.stringify(s));
                    $('#projectID').val(w[0].p);
                    $('#companyID').val(w[0].c);
                    $('#projectID').prop('disabled', true);
                    $('#companyID').prop('disabled', true);
                }, 'json');

            }
        });
    </script>
}
